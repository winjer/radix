
Objective
=========

Provide a layered system to support a CMS using couchdb.  Should at least have
conceptual support for:

    * types system
    * autogenerated edit forms
    * workflow
    * user authentication
    * access control
    * granular permissions
    * user groups
    * I18N
    * the concept of containment ('folderish' types)
    * placeful content, i.e. pages
    * placeless content, i.e. modules
    * caching control
    * combined views

The core concept is:

    * offload as much processing as possible onto couchdb
    * provide node and python bindings
    * make simple to include in non-CMS applications
        * useful to add CMS capability to applications

Design
======

Types system
------------

Features
~~~~~~~~

    * generate an edit form automatically
        * fields can be hidden/shown based on permissions
            * this needs some thought wrt couch caching policy
        * fields have:
            * name
            * title
            * description
            * help text
            * renderer
            * validation rules
        * fields can be customised by writing server-side javascript implementations
        * field renderers ('widgets') can be customised by writing server-side javascript implementations
            * markup is generated by couchdb

Implementation
~~~~~~~~~~~~~~

    Each type is implemented as a design document.
    Each view is a 'shows' implementation.
    The views within the type is used to collate the data required to provide the view of the type.
    Each show will have a template.
    The show template may require the inclusion of documents other than the document being rendered.
    These documents are also included in the relevant views.
    
        



